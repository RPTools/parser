Name;Input;Result
Simple addition;1+2;3
Simple subtraction;5 - 2;3
Simple multiplication;3 * 7;21
Complex arithmetic 1.0;1 + 2 * 10;21
Complex arithmetic 1.1;(1 + 2) * 10;30
Complex arithmetic 2;1 + 10 / 2;6
Complex arithmetic 3;4 * 4 / 2;8
Complex arithmetic 4;-1 + -5;-6
Complex arithmetic 5;-1 * (2 + 2 - 1) / -1;3
Decimal arithmetic;1.2+ 2.7;3.9
Decimal arithmetic;1.3 + 2.2;3.5
Decimal arithmetic;12345.223344 - 1000.112233;11345.111111
Simple power;2^3;8
Simple power 2;1^100;1
Multiplication with power;2 * 2^3;16
Standard function: abs() 1;abs(10);10
Standard function: abs() 2;abs(-10);10
Standard function: abs() 3;ABS(-10);10
Standard function: ceil();ceil(2.2);3
Standard function: floor();floor(2.2);2
Standard function: hypot();hypot(3.0, 4.0);5
Standard function: max() 2 arg;max(1.0, 2.0);2
Standard function: max() 5 arg;max(1.0, 2.0, 3.0, 1.1, 5.6);5.6
Standard function: min() 2 arg;min(1.0, 2.0);1
Standard function: min() 5 arg;min(1.0, 2.0, 3.0, 1.1, 5.6);1
Standard function: round() 1 arg;round(2.2);2
Standard function: round() 2 arg;round(2.1234, 2);2.12
Standard function: sqr();sqr(2.2);4.84
Standard function: pow() decimal base;pow(2.2, 3);10.648
Standard function: pow() small base and large exponent;pow(2, 8);256
Standard function: pow() large base and small exponent;pow(8, 2);64
Standard function: sqrt();sqrt(4.84);2.2
Standard function: log();log(10);1
Standard function: round() composed with ln();round(ln(9), 2);2.20
String addition;"foo" + "bar";foobar
String and integer addition;1 + 2 + "foo" + "bar";3foobar
String and integer addition and subtraction;1 - 2 + "foo";-1foo
Standard function: eval() one arg;eval('2*2');4
Standard function: eval() multiple arguments;eval('a=2*2', 'b=3+1', 'a*b');16
Standard function: band();band(1, 2);0
Standard function: bor();bor(1, 2);3
Standard function: bnot();bnot(3);-4
Standard function: bxor();bxor(7, 2);5
Standard function: bor() hex input;bor(0xFF00, 0x00FF);65535
Standard function: band() hex input;band(0xFFF0, 0x00FF);240
Hex integer;0xFF;255
Standard function: hex() single byte;hex(0xFF);0xFF
Standard function: hex() single byte as two;hex(0x00FF);0xFF
Standard function: hex() two byte;hex(0xfac1);0xFAC1
Boolean: true;true;1
Boolean: false;false;0
Not: non-zero;!10;0
Not: zero;!0;1
And: non-zero;10 && 7;1
And: zero rhs;10 && 0;0
Or: chained;10 || 7 || 0;1
Or: zero lhs and rhs;0 || 0;0
Equals: yes;10 == 10;1
Equals: no;10 == 1;0
Not equal: yes;10 != 1;1
Not equal: no;10 != 10;0
Greater than: yes;10 > 7;1
Greater than: no;10 > 12;0
Greater than or equal: yes;10 >= 10;1
Greater than or equal: no;10 >= 15;0
Less than: no;10 < 7;0
Less than: yes;10 < 12;1
Less than or equal: yes;10 <= 10;1
Less than or equal: no;10 <= 15;1
And with greater than: no;true && 10 > 15;0
And with greater than: yes;true && 15 > 10;1
Or with greater than: yes;true || 10 > 15;1
Or with greater than: yes;false || 15 > 10;1
Compound comparison;10 <= 15 && 12 >= 12;1
String equals: yes;'foo' == 'foo';1
String not equals: yes;'foo' != 'bar';1
String equals: no;'foo' == 'bar';0
String equals mixed whitespace: no;'foo ' == ' foo';1
String equals mixed case: no;'Foo ' == ' fOo ';1
Standard function: eqs() mixed case strings;eqs('Foo ', ' fOo ');0
Standard function: eqs() same string;eqs('foo', 'foo');1
Adjacent strings;"foo" "bar";foo
Multiline;`10 +
17 +
3`;30
Unicode: multibyte BMP (U+2019);"pre â€™ post";pre â€™ post
Unicode: SMP (U+1F512);"pre ðŸ”’ post";pre ðŸ”’ post
Unicode: CJK (U+30013);"pre ð°€“ post";pre ð°€“ post