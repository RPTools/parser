Name;Input;Structure
Simple addition;1+2; ( + 1 2 )
Arithmetic with function call;200+2+roll(2,4); ( + ( + 200 2 ) ( roll 2 4 ) )
Simple subtraction;5 - 2; ( - 5 2 )
Simple multiplication;3 * 7; ( * 3 7 )
Complex arithmetic 1.0;1 + 2 * 10; ( + 1 ( * 2 10 ) )
Complex arithmetic 1.1;(1 + 2) * 10; ( * ( + 1 2 ) 10 )
Complex arithmetic 2;1 + 10 / 2; ( + 1 ( / 10 2 ) )
Complex arithmetic 3;4 * 4 / 2; ( / ( * 4 4 ) 2 )
Complex arithmetic 4;-1 + -5; ( + ( - 1 ) ( - 5 ) )
Complex arithmetic 5;-1 * (2 + 2 - 1) / -1; ( / ( * ( - 1 ) ( - ( + 2 2 ) 1 ) ) ( - 1 ) )
Decimal arithmetic;1.2+ 2.7; ( + 1.2 2.7 )
Decimal arithmetic;1.3 + 2.2; ( + 1.3 2.2 )
Decimal arithmetic;12345.223344 - 1000.112233; ( - 12345.223344 1000.112233 )
Simple power;2^3; ( ^ 2 3 )
Simple power 2;1^100; ( ^ 1 100 )
Multiplication with power;2 * 2^3; ( * 2 ( ^ 2 3 ) )
Standard function: abs() 1;abs(10); ( abs 10 )
Standard function: abs() 2;abs(-10); ( abs ( - 10 ) )
Standard function: abs() 3;ABS(-10); ( ABS ( - 10 ) )
Standard function: ceil();ceil(2.2); ( ceil 2.2 )
Standard function: floor();floor(2.2); ( floor 2.2 )
Standard function: hypot();hypot(3.0, 4.0); ( hypot 3.0 4.0 )
Standard function: max() 2 arg;max(1.0, 2.0); ( max 1.0 2.0 )
Standard function: max() 5 arg;max(1.0, 2.0, 3.0, 1.1, 5.6); ( max 1.0 2.0 3.0 1.1 5.6 )
Standard function: min() 2 arg;min(1.0, 2.0); ( min 1.0 2.0 )
Standard function: min() 5 arg;min(1.0, 2.0, 3.0, 1.1, 5.6); ( min 1.0 2.0 3.0 1.1 5.6 )
Standard function: round() 1 arg;round(2.2); ( round 2.2 )
Standard function: round() 2 arg;round(2.1234, 2); ( round 2.1234 2 )
Standard function: sqr();sqr(2.2); ( sqr 2.2 )
Standard function: pow() decimal base;pow(2.2, 3); ( pow 2.2 3 )
Standard function: pow() small base and large exponent;pow(2, 8); ( pow 2 8 )
Standard function: pow() large base and small exponent;pow(8, 2); ( pow 8 2 )
Standard function: sqrt();sqrt(4.84); ( sqrt 4.84 )
Standard function: log();log(10); ( log 10 )
Standard function: round() composed with ln();round(ln(9), 2); ( round ( ln 9 ) 2 )
String addition;"foo" + "bar"; ( + "foo" "bar" )
String and integer addition;1 + 2 + "foo" + "bar"; ( + ( + ( + 1 2 ) "foo" ) "bar" )
String and integer addition and subtraction;1 - 2 + "foo"; ( + ( - 1 2 ) "foo" )
Assignment simple;a = 5; ( = a 5 )
Assignment with expression;b = a * 2; ( = b ( * a 2 ) )
Self-assignment;b = b * b; ( = b ( * b b ) )
Standard function: set() within an Assignment with expression;10 * set("c", 10); ( * 10 ( set "c" 10 ) )
Standard function: eval() one arg;eval('2*2'); ( eval '2*2' )
Standard function: eval() multiple arguments;eval('a=2*2', 'b=3+1', 'a*b'); ( eval 'a=2*2' 'b=3+1' 'a*b' )
Standard function: band();band(1, 2); ( band 1 2 )
Standard function: bor();bor(1, 2); ( bor 1 2 )
Standard function: bnot();bnot(3); ( bnot 3 )
Standard function: bxor();bxor(7, 2); ( bxor 7 2 )
Standard function: bor() hex input;bor(0xFF00, 0x00FF); ( bor 0xFF00 0x00FF )
Standard function: band() hex input;band(0xFFF0, 0x00FF); ( band 0xFFF0 0x00FF )
Hex integer;0xFF; 0xFF
Standard function: hex() single byte;hex(0xFF); ( hex 0xFF )
Standard function: hex() single byte as two;hex(0x00FF); ( hex 0x00FF )
Standard function: hex() two byte;hex(0xfac1); ( hex 0xfac1 )
No parameters function;test(); ( test )
Boolean: true;true; true
Boolean: false;false; false
Not: non-zero;!10; ( ! 10 )
Not: zero;!0; ( ! 0 )
And: non-zero;10 && 7; ( && 10 7 )
And: zero rhs;10 && 0; ( && 10 0 )
Or: chained;10 || 7 || 0; ( || ( || 10 7 ) 0 )
Or: zero lhs and rhs;0 || 0; ( || 0 0 )
Equals: yes;10 == 10; ( == 10 10 )
Equals: no;10 == 1; ( == 10 1 )
Not equal: yes;10 != 1; ( != 10 1 )
Not equal: no;10 != 10; ( != 10 10 )
Greater than: yes;10 > 7; ( > 10 7 )
Greater than: no;10 > 12; ( > 10 12 )
Greater than or equal: yes;10 >= 10; ( >= 10 10 )
Greater than or equal: no;10 >= 15; ( >= 10 15 )
Less than: no;10 < 7; ( < 10 7 )
Less than: yes;10 < 12; ( < 10 12 )
Less than or equal: yes;10 <= 10; ( <= 10 10 )
Less than or equal: no;10 <= 15; ( <= 10 15 )
And with greater than: no;true && 10 > 15; ( && true ( > 10 15 ) )
And with greater than: yes;true && 15 > 10; ( && true ( > 15 10 ) )
Or with greater than: yes;true || 10 > 15; ( || true ( > 10 15 ) )
Or with greater than: yes;false || 15 > 10; ( || false ( > 15 10 ) )
Compound comparison;10 <= 15 && 12 >= 12; ( && ( <= 10 15 ) ( >= 12 12 ) )
String equals: yes;'foo' == 'foo'; ( == 'foo' 'foo' )
String not equals: yes;'foo' != 'bar'; ( != 'foo' 'bar' )
String equals: no;'foo' == 'bar'; ( == 'foo' 'bar' )
String equals mixed whitespace: no;'foo ' == ' foo'; ( == 'foo ' ' foo' )
String equals mixed case: no;'Foo ' == ' fOo '; ( == 'Foo ' ' fOo ' )
Standard function: eqs() mixed case strings;eqs('Foo ', ' fOo '); ( eqs 'Foo ' ' fOo ' )
Standard function: eqs() same string;eqs('foo', 'foo'); ( eqs 'foo' 'foo' )
Adjacent strings;"foo" "bar"; "foo"
Multiline;`10 +
17 +
3`; ( + ( + 10 17 ) 3 )
Unicode: multibyte BMP (U+2019);"pre â€™ post"; "pre â€™ post"
Unicode: SMP (U+1F512);"pre ðŸ”’ post"; "pre ðŸ”’ post"
Unicode: CJK (U+30013);"pre ð°€“ post"; "pre ð°€“ post"